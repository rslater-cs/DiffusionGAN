####################
#
# Example Job for HTCondor
#
####################

#---------------------------------------------
# Name your batch so it's easy to distinguish in the q.
JobBatchName = "MetadataClassifier"

# --------------------------------------------
# Executable
executable    = /vol/research/COM3025Team5/miniconda3/envs/dgan/bin/python

# ---------------------------------------------------
# Universe (vanilla, docker)
universe     = docker
docker_image = nvidia/cuda:10.1-cudnn7-runtime-ubuntu16.04

# -------------------------------------------------
# Event, out and error logs
log    = c$(cluster).p$(process).log
output = c$(cluster).p$(process).out
error  = c$(cluster).p$(process).error

# -----------------------------------
# File Transfer, Input, Output
should_transfer_files = YES

# Mount the project spaces containing the Anaconda environments and the code
environment = "mount=/vol/research/COM3025Team5"

# -------------------------------------
# Requirements for the Job (see NvidiaDocker/Example09)
requirements = (CUDAGlobalMemoryMb > 10000) && (CUDAGlobalMemoryMb <  15000) && \
#              (HasStornext) && \
               (CUDACapability > 2.0)

# --------------------------------------
# Resources
request_GPUs   = 1
# this needs to be specified for the AI@Surrey cluster if requesting a GPU
+GPUMem          = 10000
request_CPUs   = 1
request_memory = 16G

#This job will complete in less than 8 hours
+JobRunTime = 8

#This job can checkpoint
+CanCheckpoint = true

# ------------------------------------
# Request for guaruanteed run time. 0 means job is happy to checkpoint and move at any time.
# This lets Condor remove our job ASAP if a machine needs rebooting. Useful when we can checkpoint and restore
# Measured in seconds, so it can be changed to match the time it takes for an epoch to run
MaxJobRetirementTime = 0

# -----------------------------------
# Queue commands. We can use variables and flags to launch our command with multiple options (as you would from the command line)
arguments = $ENV(PWD)/train_metadata_classifier.py --path /vol/research/COM3025Team5/ISIC_Combined --save_dir /vol/research/COM3025Team5/ISIC_Combined/metadata_classifier_results --epochs $(epochs) --learning_rate $(lr)

epochs = 50
lr = 0.0001

queue 1
